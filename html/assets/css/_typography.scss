@charset "utf-8";
/* CSS Document */

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  word-wrap: break-word;
}

:root {
  --body-bg-color: #e3e3e3;
  --scroll-color: #c3bebe;
  --scroll--hover-color: #c3bebe;
  --scroll-track-color: #e3dede;
}
* {
  scrollbar-color: #c3bebe #e3dede;
  scrollbar-width: thin;
  &::-webkit-scrollbar-track {
    background: linear-gradient(to right, var(--scroll-track-color) 0%, var(--scroll-track-color) 100%, var(--scroll-color) 60%, var(--body-bg-color) 61%, var(--body-bg-color) 100%);
  }
  &::-webkit-scrollbar {
    width: 4px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: var(--scroll-color);
    border-radius: 0;
  }
}
::-webkit-scrollbar {
  background: transparent;
  width: 5px;
  height: 5px;
  margin-left: 10px;
}
::-webkit-scrollbar-thumb {
  background-color: rgba(0, 0, 0, 0.05);
  &:hover {
    background-color: rgba(0, 0, 0, 0.1);
  }
}


body {
  background-color: transparent;
  font-family: $quicksandfontFamily;
  font-size: $bodyfontSize;
  color: $black;
  font-weight: 400;
  margin: 0;
  padding: 0;
  overflow-x: hidden;
  box-sizing: border-box;
  word-wrap: break-word;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-backface-visibility: hidden;
  -moz-osx-font-smoothing: grayscale; 
  &.scroll {
    overflow: hidden;
  }
  @include tablet {
    font-size: 14px;
  }
  @include smartphone {
    font-size: 13px;
  }
}

html,
body {
  height: 100%;
}
main,
header,
section,
footer {
  width: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  @include margnpad;
  font-weight: 900;
}
a,
a:hover,
a:focus,
button,
button:hover,
button:focus,
input:focus {
  text-decoration: none;
  outline: none;
}
.fullImg {
	width: 100%;
}
img {
  max-width: 100%;
}
.clear {
  clear: both;
}

input:focus,
select:focus {
  outline: none !important;
  box-shadow: none !important;
}

p {
  font-size: $bodyfontSize;
  font-weight: normal;
  color: $grey;
  &:last-of-type {
    margin-bottom: 0;
  }
  a {
    text-decoration: underline;
  }
  strong {
    font-weight: 600;
  }
  @include large-pc { 
    font-size: 15px;
  }
  @include laptop {
    font-size: 14px;
  }
}
ul {
  list-style: none;
  @include margnpad;
}
a,
button,
textarea {
  transition: ease 0.3s;
  -webkit-transition: ease 0.3s;
  -moz-transition: ease 0.3s;
  text-decoration: none;
  outline: none !important;
  color: inherit;
  font-size: inherit;
  resize: none;
}
a:hover,
button:hover {
  color: inherit;
  text-decoration: none;
}
button {
  background: none;
  border: 0;
  padding: 0;
  cursor: pointer;
}
select {
  background-image: url("../../images/select-arrow.svg");
  background-position: 95% center;
  background-repeat: no-repeat;
  background-size: 13px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  cursor: pointer;
  @include tablet {
    background-size: 10px;
  }
}
input {
  @include box-shadow(none);
}
input[type="submit"] {
  transition: ease 0.3s;
  -webkit-transition: ease 0.3s;
  -moz-transition: ease 0.3s;
  text-decoration: none !important;
  outline: none !important;
}
input:-webkit-autofill {
  background-color: $white !important;
  -webkit-box-shadow: 0 0 0 1000px $white inset;
  -webkit-transition-property: $white !important;
  background-clip: content-box;
}
input:-webkit-autofill,
input:-webkit-autofill:focus input:-webkit-autofill,
input:-webkit-autofill:hover,
select:-webkit-autofill,
select:-webkit-autofill:focus,
select:-webkit-autofill:hover,
textarea:-webkit-autofill,
textarea:-webkit-autofill:focus,
textarea:-webkit-autofill:hover {
  -webkit-box-shadow: 0 0 0 1000px $white inset !important;
  -webkit-text-fill-color: $black;
}
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
input[type="number"] {
  -moz-appearance: textfield;
}

/*Checkbox With Radio*/
.checkbox,
.radio,
.switch {
    --toggle: #fff;
    --toggle-active: #152C55;
    --toggle-border: #607787;
    --toggle-border-hover: #A6ACCD;
    --toggle-border-active: #152C55;
    --toggle-inner: #fff;
    --switch: #D1D6EE;
    --switch-hover: #CACFE6;
    --switch-active: #152C55;
    --switch-dot: #fff;
    --switch-dot-shadow: #{rgba(#152C55, .1)};
    position: relative;
    @include flex;
    cursor: pointer;
    + * {
      margin-top: 20px;
    }

    input {
        display: block;
        -webkit-tap-highlight-color: transparent;
        -webkit-appearance: none;
        outline: none;
        border: none;
        cursor: pointer;
        padding: 0;
        margin: 0;
        width: var(--input-width, 22px);
        height: var(--input-height, 22px);
    }
    svg {
        fill: var(--svg-fill, none);
        stroke: var(--svg-stroke, none);
        stroke-width: var(--svg-stroke-width, 0);
        stroke-linecap: round;
        stroke-linejoin: round;
        display: block;
        width: var(--svg-width, 28px);
        height: var(--svg-height, 28px);
        position: absolute;
        top: var(--svg-top, -3px);
        left: var(--svg-left, -3px);
        pointer-events: none;
        transform: scale(var(--svg-scale, 1)) translateZ(0);
        transition: stroke .3s, fill .3s, stroke-dashoffset .15s ease var(--svg-delay, 0s), transform var(--svg-transform-duration, 0s);
    }
    span {
      font-size: 15px;
      font-weight: 500;
      padding-left: 15px;
      color: $greyTint4;
    }
}
.checkbox,
.radio {
    --svg-fill: var(--toggle);
    --svg-stroke: var(--toggle-border);
    --svg-stroke-width: 2px;
    input {
        &:hover {
            & + svg {
                --svg-stroke: var(--toggle-border-hover);
            }
        }
        &:checked {
            & + svg {
                --svg-fill: var(--toggle-active);
                --svg-stroke: var(--toggle-border-active);
            }
        }
    }
}
.checkbox {
    .tick {
        --svg-width: 12px;
        --svg-height: 10px;
        --svg-fill: none;
        --svg-stroke: var(--toggle-inner);
        --svg-stroke-width: 2px;
        --svg-top: 6px;
        --svg-left: 5px;
        stroke-dasharray: 14px;
        stroke-dashoffset: var(--svg-offset, 14px);
    }
    input {
        &:checked {
            & + svg {
                & + .tick {
                    --svg-offset: 0;
                    --svg-delay: .15s;
                }
            }
        }
    }
}
.radio {
    --svg-transform-duration: .1s;
    input {
        &:checked {
            & + svg {
                & + .inner {
                    --svg-scale: 1;
                }
            }
        }
    }
    .inner {
        --svg-fill: var(--toggle-inner);
        --svg-stroke-width: 0;
        --svg-width: 14px;
        --svg-height: 14px;
        --svg-top: 4px;
        --svg-left: 4px;
        --svg-scale: 0;
    }
}
.switch {
    --input-width: 40px;
    --svg-width: 36px;
    --svg-height: 18px;
    --svg-top: 2px;
    --svg-left: 2px;
    --svg-fill: var(--switch-dot);
    input {
        background: var(--b, var(--switch));
        border-radius: 11px;
        transition: background .3s;
        &:hover {
            --b: var(--switch-hover);
        }
        &:checked {
            --b: var(--switch-active);
            & + svg {
                transform: scaleX(-1);
            }
        }
    }
    &.active {
        input {
            --b: var(--switch-active);
            &:checked {
                --b: var(--switch);
            }
        }
    }
    svg {
        filter: drop-shadow(0 .5px .5px var(--switch-dot-shadow));
    }
}

/*Prelaoder*/
#preloader {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 9999;
  overflow: hidden;
  background: $white;
  &:before {
    content: "";
    position: fixed;
    top: calc(50% - 30px);
    left: calc(50% - 30px);
    border: 6px solid $green;
    border-top: 6px solid $white;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    -webkit-animation: animate-preloader 1s linear infinite;
    animation: animate-preloader 1s linear infinite;
  }
}
@-webkit-keyframes animate-preloader {
  0% {
    @include rotate(0);
  }
  100% {
    @include rotate(360);
  }
}
@keyframes animate-preloader {
  0% {
    @include rotate(0);
  }
  100% {
    @include rotate(360);
  }
}
